# Generated by Django 3.0.2 on 2021-05-14 01:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Requester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('verifiedPhone', models.BooleanField(default=False)),
                ('verifiedEmail', models.BooleanField(default=False)),
                ('instagramHandle', models.URLField(blank=True)),
                ('facebookHandle', models.URLField(blank=True)),
                ('consent', models.BooleanField(default=False, help_text='I agree to provide the following data to the potential suppliers.')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('phone', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in format +919999999999.', regex='^\\+?1?\\d{9,10}$')])),
                ('verifiedPhone', models.BooleanField(default=False)),
                ('humanVerified', models.BooleanField(default=False)),
                ('verifiedEmail', models.BooleanField(default=False)),
                ('instagramHandle', models.URLField(blank=True)),
                ('facebookHandle', models.URLField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('consent', models.BooleanField(default=False, help_text='I agree to provide the following data to the potential people who might be in need of the services.')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Oxygen', 'Oxygen'), ('Medications (no Remdesivir)', 'Medications (no Remdesivir)'), ('Remdesivir', 'Remdesivir'), ('Hospital Beds', 'Hospital Beds'), ('Ventilator Beds', 'Ventilator Beds'), ('Home-made Food', 'Home-made Food'), ('Ambulance', 'Ambulance'), ('Monetary Donations', 'Monetary Donations'), ('Plasma Donations', 'Plasma Donations'), ('Laboratory Testing', 'Laboratory Testing')], default='Oxygen', max_length=70)),
                ('requester', models.ManyToManyField(to='covid.Requester')),
                ('supplier', models.ManyToManyField(to='covid.Supplier')),
            ],
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['state'], name='state_supplier'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['phone'], name='phone_supplier'),
        ),
        migrations.AddIndex(
            model_name='requester',
            index=models.Index(fields=['state'], name='state_requester'),
        ),
        migrations.AddIndex(
            model_name='requester',
            index=models.Index(fields=['phone'], name='phone_requester'),
        ),
    ]
